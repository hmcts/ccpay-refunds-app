<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
  <suppress until="2030-01-01">
    <notes><![CDATA[
     Suppressing as it's a false positive (see: https://pivotal.io/security/cve-2018-1258)
   ]]></notes>
    <gav regex="true">^org\.springframework\.security:spring-security-crypto:5.4.[0-5]</gav>
    <cpe>cpe:/a:pivotal_software:spring_security</cpe>
    <cve>CVE-2018-1258</cve>
  </suppress>
  <suppress>
    <notes> Suppressing this CVE as it occurs even in the latest version of lang-tag-1.5</notes>
    <cve>CVE-2020-23171</cve>
  </suppress>
  <suppress>
    <notes> Suppressing this CVE as it occurs even in the latest version of logback-core and logback-classic 1.2.10</notes>
    <cve>CVE-2021-42550</cve>
  </suppress>
  <suppress>
    <notes>
      jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth
      of nested objects.
    </notes>
    <cve>CVE-2020-36518</cve>
  </suppress>
  <suppress>
    <notes>
      pgjdbc is the offical PostgreSQL JDBC Driver. A security hole was found in the jdbc driver for postgresql
      database while doing security research. The system using the postgresql library will be attacked when attacker
      control the jdbc url or properties. pgjdbc instantiates plugin instances based on class names provided via
      `authenticationPluginClassName`, `sslhostnameverifier`, `socketFactory`, `sslfactory`, `sslpasswordcallback`
      connection properties. However, the driver did not verify if the class implements the expected interface before
      instantiating the class. This can lead to code execution loaded via arbitrary classes. Users using plugins are
      advised to upgrade. There are no known workarounds for this issue.
    </notes>
    <cve>CVE-2022-21724</cve>
  </suppress>
  <suppress>
    <notes>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE)
      via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the
      application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit.
      However, the nature of the vulnerability is more general, and there may be other ways to exploit it.
    </notes>
    <cve>CVE-2022-22965</cve>
  </suppress>
  <suppress>
    <notes>In Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to
      provide a specially crafted SpEL expression that may cause a denial of service condition.
    </notes>
    <cve>CVE-2022-22950</cve>
  </suppress>
  <suppress>
    <notes>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue
      if used for Java deserialization of untrusted data.
    </notes>
    <cve>CVE-2016-1000027</cve>
  </suppress>
</suppressions>
