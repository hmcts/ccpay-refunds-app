<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
  <suppress until="2022-12-31">
    <notes><![CDATA[
     Suppressing as it's a false positive (see: https://pivotal.io/security/cve-2018-1258)
   ]]></notes>
    <gav regex="true">^org\.springframework\.security:spring-security-crypto:5.4.[0-5]</gav>
    <cpe>cpe:/a:pivotal_software:spring_security</cpe>
    <cve>CVE-2018-1258</cve>
  </suppress>
  <suppress>
    <notes> Suppressing this CVE as it occurs even in the latest version of lang-tag-1.5</notes>
    <cve>CVE-2020-23171</cve>
  </suppress>
  <suppress>
    <notes> Suppressing this CVE as it occurs even in the latest version of logback-core and logback-classic 1.2.10</notes>
    <cve>CVE-2021-42550</cve>
  </suppress>
  <suppress>
    <notes>
      jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth
      of nested objects.
    </notes>
    <cve>CVE-2020-36518</cve>
  </suppress>
  <suppress>
    <notes>
      pgjdbc is the offical PostgreSQL JDBC Driver. A security hole was found in the jdbc driver for postgresql
      database while doing security research. The system using the postgresql library will be attacked when attacker
      control the jdbc url or properties. pgjdbc instantiates plugin instances based on class names provided via
      `authenticationPluginClassName`, `sslhostnameverifier`, `socketFactory`, `sslfactory`, `sslpasswordcallback`
      connection properties. However, the driver did not verify if the class implements the expected interface before
      instantiating the class. This can lead to code execution loaded via arbitrary classes. Users using plugins are
      advised to upgrade. There are no known workarounds for this issue.
    </notes>
    <cve>CVE-2022-21724</cve>
  </suppress>
  <suppress>
    <notes>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE)
      via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the
      application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit.
      However, the nature of the vulnerability is more general, and there may be other ways to exploit it.
    </notes>
    <cve>CVE-2022-22965</cve>
  </suppress>
  <suppress>
    <notes>In Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to
      provide a specially crafted SpEL expression that may cause a denial of service condition.
    </notes>
    <cve>CVE-2022-22950</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used
      for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this
      issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is
      not an intended use case. The product's behavior will not be changed because some users rely on deserialization of
      trusted data.
    </notes>
    <cve>CVE-2016-1000027</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for
      disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is
      listed with both upper and lower case for the first character of the field, including upper and lower case for the
      first character of all nested fields within the property path.
    </notes>
    <cve>CVE-2022-22968</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>In spring framework versions prior to 5.3.20+, 5.2.22+ and old unsupported versions, applications that
      handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or
      javax.servlet.Part to a field in a model object.
    </notes>
    <cve>CVE-2022-22970</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>In spring framework versions prior to 5.3.20+, 5.2.22+ and old unsupported versions, application with a
      STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.
    </notes>
    <cve>CVE-2022-22971</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>In Apache Tomcat 10.1.0-M1 to 10.1.0-M16, 10.0.0-M1 to 10.0.22, 9.0.30 to 9.0.64 and 8.5.50 to 8.5.81
      the Form authentication example in the examples web application displayed user provided data without filtering,
      exposing a XSS vulnerability.
    </notes>
    <cve>CVE-2020-5408</cve>
    <cve>CVE-2022-22976</cve>
    <cve>CVE-2022-22969</cve>
    <cve>CVE-2021-22119</cve>
    <cve>CVE-2022-22978</cve>
    <cve>CVE-2021-22096</cve>
    <cve>CVE-2021-22118</cve>
    <cve>CVE-2021-22060</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes> In pgjdbc before 42.3.3, an attacker (who controls the jdbc URL or properties) can call
      java.util.logging.FileHandler to write to arbitrary files through the loggerFile and loggerLevel
      connection properties. An example situation is that an attacker could create an executable JSP file under
      a Tomcat web root.
    </notes>
    <cve>CVE-2022-34305</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>
      Versions of the Amazon AWS Apache Log4j hotpatch package before log4j-cve-2021-44228-hotpatch-1.3.5 are
      affected by a race condition that could lead to a local privilege escalation. CVE-2022-33915 occured,
      despite latest versions used.
    </notes>
    <cve>CVE-2022-33915</cve>
  </suppress>
    <suppress until="2022-12-31">
       <notes>
           The RipudamanKaushikDal/projects repository through 2022-04-03 on GitHub allows absolute path traversal
           because the Flask send_file function is used unsafely.
       </notes>
       <cve>CVE-2022-31569</cve>
   </suppress>

   <suppress until="2022-12-31">
       <notes>
           The nrlakin/homepage repository through 2017-03-06 on GitHub allows absolute path traversal because the
           Flask send_file function is used unsafely.
       </notes>
       <cve>CVE-2022-31548</cve>
   </suppress>
  <suppress until="2022-12-31">
    <notes>Spring framework vulnerabilities
    </notes>
    <cve>CVE-2022-31569</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>
      The nrlakin/homepage repository through 2017-03-06 on GitHub allows absolute path traversal because the
      Flask send_file function is used unsafely.
    </notes>
    <cve>CVE-2022-31548</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>
      The PGJDBC implementation of the java.sql.ResultRow.refreshRow() method is not performing escaping of column names
      so a malicious column name that contains a statement terminator, e.g. ; could lead to SQL injection. This could
      lead to executing additional SQL commands as the application's JDBC user. User applications that do not invoke the
      ResultSet.refreshRow() method are not impacted.
    </notes>
    <cve>CVE-2022-31197</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>
      The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to
      Denial of Service (DoS) due missing to nested depth limitation for collections.
      snakeyaml v1.31 (most recent patch available currently) does not resolve the issue.
    </notes>
    <cve>CVE-2022-25857</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>
      Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser
      is running on user supplied input, an attacker may supply content that causes the parser to crash by
      stackoverflow.
    </notes>
    <cve>CVE-2022-38749</cve>
    <cve>CVE-2022-38750</cve>
    <cve>CVE-2022-38751</cve>
    <cve>CVE-2022-38752</cve>
  </suppress>
  <suppress until="2022-12-31">
        <notes>
          In FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in
          primitive value deserializers to avoid deep wrapper array nesting,
          when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled
        </notes>
        <cve>CVE-2022-42003</cve>
        <cve>CVE-2022-42004</cve>
  </suppress>
  <suppress until="2022-12-31">
    <notes>
      Postgres jdbc vulnerability is not resolved by the most recent patch 42.4.3 and is being supressed until a newer version is available.
    </notes>
    <cve>CVE-2022-41946</cve>
    <cve>CVE-2021-37533</cve>
  </suppress>
</suppressions>
