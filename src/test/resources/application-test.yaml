management:
  endpoints:
    web:
      base-path: /

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: refunds-api
  datasource:
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
    url: jdbc:tc:postgresql:11.0://localhost/features
  liquibase:
    enabled: ${SPRING_LIQUIBASE_ENABLED:true}
    change-log: classpath:/db/changelog/db.changelog-master.xml
  jackson.date-format: yyyy-MM-dd
  flyway.enabled: true
  jackson:
    mapper:
      accept-case-insensitive-enums: true
    deserialization:
      fail-on-unknown-properties: true
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: https://idam-web-public.aat.platform.hmcts.net/o
        # Dummy OIDC client required even we are not going to use
        registration:
          oidc:
            client-id: paybubble
            client-secret: ${OIDC_CLIENT_SECRET:}
      resource:
        filter-order: 3

oidc:
  audience-list: paybubble
  issuer: ${OIDC_ISSUER:https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts}

launch:
  darkly:
    sdk:
      key: ${LAUNCH_DARKLY_SDK_KEY:}
    user:
      name: ${LAUNCH_DARKLY_USER_NAME_PREFIX:}@feesandpay.com

auth:
  provider:
    service:
      client:
        baseUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
  idam:
    client:
      baseUrl: https://idam-api.aat.platform.hmcts.net
test:
  url: ${TEST_URL:http://localhost:8080}
  user:
    password: ${TEST_USER_PASSWORD:}

idam:
  api:
    url: ${IDAM_API_URL:https://idam-api.aat.platform.hmcts.net}
  s2s-authorised:
    services:  ccpay_bubble,internal,payment_app,refunds_api
  s2s-auth:
    url: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    totp_secret: ${OIDC_S2S_SECRET:}
    microservice: ${OIDC_S2S_MICROSERVICE_NAME:}

oauth2:
  redirect:
    uri: ${OAUTH2_REDIRECT_URI:https://moneyclaims.aat.platform.hmcts.net}
  client:
    id: ${OAUTH2_CLIENT_ID:}
    secret: ${OAUTH2_CLIENT_SECRET_CMC_CITIZEN:}

s2s:
  url: ${S2S_URL:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}
azure:
  application-insights:
    instrumentation-key: ${APPINSIGHTS_INSTRUMENTATIONKEY:}

refunds:
  serviceAccount:
    clientId: ${REFUND_SERVICE_ACCOUNT_CLIENT_ID:}
    clientSecret: ${REFUND_SERVICE_ACCOUNT_CLIENT_SECRET:}
    grantType:  ${REFUND_SERVICE_ACCOUNT_GRANT_TYPE:}
    username: ${REFUND_SERVICE_ACCOUNT_USERNAME:}
    password: ${REFUND_SERVICE_ACCOUNT_PASSWORD:}
    scope: ${REFUND_SERVICE_ACCOUNT_SCOPE:}
    redirectUri: ${REFUND_SERVICE_ACCOUNT_REDIRECT_URI:}

liberata:
  oauth2:
    client:
      id: ${LIBERATA_OAUTH2_CLIENT_ID:}
      secret: ${LIBERATA_OAUTH2_CLIENT_SECRET:}
    username: ${LIBERATA_OAUTH2_USERNAME:}
    password: ${LIBERATA_OAUTH2_PASSWORD:}
    authorize:
      url: ${LIBERATA_OAUTH2_AUTHORIZE_URL:}
    token:
      url: ${LIBERATA_OAUTH2_TOKEN_URL:}
  api:
    key: ${LIBERATA_API_KEY:}

payments:
  api:
    url: ${PAYMENT_API_URL:}



reconciliation-provider:
  api:
    url: ${LIBERATA_BASE_URL:}
  refund-status-update-path: ${REFUND_STATUS_UPDATE_PATH:}
