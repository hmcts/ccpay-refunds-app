buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath("net.serenity-bdd:serenity-gradle-plugin:2.5.10")
    classpath("net.serenity-bdd:serenity-single-page-report:2.6.0")
  }
}

plugins {
  id 'application'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.1.5'
  id 'org.springframework.boot' version '2.7.18'
  id 'org.owasp.dependencycheck' version '9.0.4'
  id 'com.github.ben-manes.versions' version '0.50.0'
  id 'org.sonarqube' version '3.5.0.2730'
  id 'uk.gov.hmcts.java' version '0.12.61'
  id "info.solidsoft.pitest" version '1.15.0'
}

apply plugin: 'net.serenity-bdd.aggregator'
apply from: 'liquibase.gradle'

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

def springCloudVersion = '2021.0.9'
def javaLoggingVersion = '6.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
    jar {
      duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
    jar {
      duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
    jar {
      duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }
  }

  tasks.withType(Copy) {
    filesMatching("**/*.yaml") {
      duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }
  }

  jar {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
  }
}


repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
  maven { url 'https://jitpack.io' }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
  useJUnitPlatform()
  testLogging {
    exceptionFormat = 'full'
  }
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  include "uk/gov/hmcts/reform/refunds/functional/**"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  enableAssertions = true
  scanForTestClasses = true
}

// Serenity Reporting
functional.finalizedBy(aggregate)

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  useJUnitPlatform()
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
  testLogging.showStandardStreams = true
}

pmd {
  toolVersion = "6.18.0"
  sourceSets = [sourceSets.main, sourceSets.test,sourceSets.functionalTest, sourceSets.integrationTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}
task smokeTest(type: Test, description: 'Runs the smoke tests', group: 'Verification') {
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}


project.tasks['sonarqube'].dependsOn jacocoTestReport


def sonarExclusions = [
  '**/model/**',
  '**/exceptions/**',
  '**/mapper/**',
  '**/mappers/**',
  '**/dtos/**',
  '**/config/**'
]

sonarqube {
  properties {
    property "sonar.java.coveragePlugin", "jacoco"
    property "sonar.projectName", "Reform :: refunds-app"
    property "sonar.projectKey", "uk.gov.hmcts.reform:refunds-app"
    property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    property "sonar.host.url", "https://sonarcloud.io/"
    property "sonar.dynamicAnalysis", "reuseReports"
    property "sonar.java.coveragePlugin", "jacoco"
    property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
    property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
    property "sonar.exclusions", sonarExclusions.join(", ")
    property "sonar.test.exclusions", sonarExclusions.join(", ")
    property "sonar.coverage.exclusions", sonarExclusions.join(", ")
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}
apply from: "${rootDir}/cve-resolution-strategy.gradle"


dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-dependencies:2.7.18"
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    mavenBom 'org.apache.logging.log4j:log4j-bom:2.22.0'
  }

  dependencies {
    // CVE-2018-10237, CVE-2020-8908
    dependencySet(group: 'com.google.guava', version: '32.1.3-jre') {
      entry 'guava'
    }
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

def versions = [
  junit           : '5.10.0',
  junitPlatform   : '1.9.3',
  reformLogging   : '5.1.7',
  springBoot      : springBoot.class.package.implementationVersion,
  springfoxSwagger: '3.0.0',
  jacocoVersion: '0.8.5',
  restAssured : '4.5.1',
  serenity                : '2.2.12',
  serenityreporter        : '2.1.4',
  serenityCucumber        : '1.9.51',
  pitest         : '1.15.3',
  gradlePitest   : '1.3.0',
  sonarPitest    : '0.5'
]

task fortifyScan(type: JavaExec)  {
  main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

apply from: "${rootDir}/cve-resolution-strategy.gradle"

dependencies {

  implementation ('com.sun.xml.bind:jaxb-osgi:2.3.9')
  implementation group: 'org.pitest', name: 'pitest', version: versions.pitest
  implementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.15.0'
  implementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'


  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
  implementation group: 'org.springdoc', name: 'springdoc-openapi-webmvc-core', version: '1.7.0'
  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: javaLoggingVersion
  implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: javaLoggingVersion
implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.10.RELEASE'
  implementation group: 'org.testng', name: 'testng', version: '6.14.3'

  compileOnly group: 'net.sourceforge.findbugs', name: 'annotations', version: '1.3.2'

  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.22.0'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.22.0'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
  implementation group: 'io.github.openfeign', name: 'feign-jackson', version: '10.12'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  implementation group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.5.2.RELEASE'
  implementation group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.4'
  implementation group: 'io.jsonwebtoken', name: 'jjwt', version:'0.12.5'
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '4.0.0'
  implementation group: 'org.springframework.boot', name:'spring-boot-starter-oauth2-client'
  implementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '1.5.5'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'
  implementation group: 'com.querydsl', name: 'querydsl-jpa', version:'4.4.0'
  implementation group: 'org.springframework.security', name: 'spring-security-web'
  implementation group: 'org.springframework.security', name: 'spring-security-config'
  implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.39'
  implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '11.10'
  implementation group: 'commons-io', name: 'commons-io', version: '2.16.1'
  implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '5.10.9'
  implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
  implementation group: 'commons-validator', name: 'commons-validator', version: '1.8.0'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.1'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.1'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.1'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation group: 'joda-time', name: 'joda-time', version: '2.12.7'
  implementation group: 'org.eclipse.collections', name: 'eclipse-collections-api', version: '11.1.0'
  implementation group: 'org.eclipse.collections', name: 'eclipse-collections', version: '11.1.0'
  implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.25.0'
  implementation(group: 'org.postgresql', name: 'postgresql', version: '42.7.3') {
    exclude(module: 'commons-logging')
    exclude(module: 'slf4j-simple')
  }
  compileOnly 'org.projectlombok:lombok:1.18.32'
  annotationProcessor 'org.projectlombok:lombok:1.18.32'

  implementation group: "com.vladmihalcea", name: "hibernate-types-55", version: "2.21.1"
  implementation group: 'org.springframework.security', name: 'spring-security-rsa', version: '1.1.3'

  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  testImplementation 'com.github.hmcts:fortify-client:1.4.1:all'
  testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0'
  testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.19.8'
  testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.8.12'
  testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.25.3'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testCompileOnly group :'org.projectlombok', name:'lombok', version:'1.18.32'
  testAnnotationProcessor group :'org.projectlombok', name:'lombok', version:'1.18.32'
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: versions.junitPlatform
  testImplementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  testImplementation group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.reformLogging

  testImplementation group: 'org.apiguardian', name: 'apiguardian-api', version: '1.1.2'

  smokeTestCompileOnly group :'org.projectlombok', name:'lombok', version:'1.18.32'
  smokeTestAnnotationProcessor group :'org.projectlombok', name:'lombok', version:'1.18.32'
  smokeTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  smokeTestImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: versions.junitPlatform
  smokeTestImplementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  smokeTestImplementation group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.reformLogging
  smokeTestImplementation group: 'org.jboss.aerogear', name: 'aerogear-otp-java', version:'1.0.0'
  smokeTestImplementation sourceSets.main.runtimeClasspath
  smokeTestImplementation sourceSets.test.runtimeClasspath


  functionalTestAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
  functionalTestAnnotationProcessor group :'org.projectlombok', name:'lombok', version:'1.18.32'
  functionalTestImplementation("junit:junit:4.13.2")
  functionalTestImplementation("org.junit.vintage:junit-vintage-engine:5.2.0")
  functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-cucumber', version: versions.serenityCucumber
  functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-screenplay', version: versions.serenity
  functionalTestImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured
  functionalTestImplementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
  functionalTestImplementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  functionalTestImplementation group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.reformLogging
  functionalTestImplementation group: 'org.jboss.aerogear', name: 'aerogear-otp-java', version:'1.0.0'
  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

}

mainClassName = 'uk.gov.hmcts.reform.refunds.RefundApplication'

bootJar {
  getArchiveFileName().set(provider {
    'refunds-api.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

checkstyle {
  toolVersion "7.8.2"
}
pmdTest.enabled(false)
pmdFunctionalTest.enabled(false)

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

serenity {
  reports = ["single-page-html"]
}

pitest {
  targetClasses = ['uk.gov.hmcts.reform.refunds.filters.*',
                   'uk.gov.hmcts.reform.refunds.service.*',
                   'uk.gov.hmcts.reform.refunds.config.*',
                   'uk.gov.hmcts.reform.refunds.controllers.*']
  excludedClasses = ['uk.gov.hmcts.reform.refunds.state.*',
                     'uk.gov.hmcts.reform.refunds.mappers.*']
  threads = 15
  testSourceSets = [sourceSets.test]
  mainSourceSets = [sourceSets.main]
  fileExtensionsToFilter.addAll('xml','json')
  outputFormats = ['XML', 'HTML','CSV']
  mutationThreshold = 9
  coverageThreshold = 0
  jvmArgs = ['-Xms1G','-Xmx3G']
  timestampedReports = false
  failWhenNoMutations = false
  detectInlinedCode = true
}
